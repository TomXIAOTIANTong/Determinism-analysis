
# def foreach(f:{resource}(A), as:list(A)) {
#     if { [?a | ?as] = as :: 
#         !f(a)
#         !foreach(f, as)
#     }
# }
# ?lambda = {resource}{
#     !print(@1)
#     !print(", ")
# }

# !foreach(println, ['a','b','c'])
# !foreach(lambda, [1,2,3]); !nl


pub def print(printer:{resource}(A), as:list(A)) use !io {
    !print('[')
    if { [?a | ?as] = as :: 
        !printer(a)
        !print_list1(printer, as)
        # !foreach({resource}{ !print(", "); !printer(@1) }, as)
    }
    !print(']')
}

pub def println(printer:{resource}(A), as:list(A)) use !io {
    !print(printer, as)
    !nl
}

def print_list1(printer:{resource}(A), as:list(A)) use !io {
    if { [?a | ?as] = as :: 
        !print(", ")
        !printer(a)
        !print_list1(printer, as)
    }
}

!println(print, ['a', 'b'])
# !println(print, ['a', 'b'])

!nl
!nl
!nl