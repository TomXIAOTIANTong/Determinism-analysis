def map_float(f:(float, ?float), as:list(float), ?bs:list(float)) {
    if { [?a | ?as] = as :: ?bs = [f(a) | map_float(f, as)]
       | else ::            ?bs = [] }
}

def  map(f:(A, ?B), as:list(A), ?bs:list(B)) {
    if { [?a | ?as] = as :: 
            f(a, ?b)
            map(f, as, ?bs)
            ?bs = [b | bs]
       | else :: ?bs = []
       }
}

def printer(ls:list(float)) use !io {
    for ?i in ls { !print i; !print(", ") }
    !nl
}

# map({@=?@}, [1,5,7,11], ?ls) 
# !foo(0, ls)

?y=1.0
?ls = [1.0, 2.0]
map({y + @ = ?@}, ls, ?ls0) 
!printer(ls0)
!println("---")
map_float({y + @1 = ?@2}, ls, ?ls1) 
!printer(ls1)

